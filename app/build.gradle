plugins {
    alias libs.plugins.kotlin.android
    alias libs.plugins.kotlin.kapt
    alias libs.plugins.android.application
    alias libs.plugins.ktlint.gradle
    alias libs.plugins.hilt.android
    alias libs.plugins.gms
    alias libs.plugins.spotless
    alias libs.plugins.navigation.safeargs
    id "org.jetbrains.kotlin.plugin.serialization" version "1.7.0"
    id "io.gitlab.arturbosch.detekt" version "1.22.0"
}

android {
    compileSdk 34
    buildToolsVersion "31.0.0"

    defaultConfig {
        applicationId "com.hieuwu.groceriesstore"
        minSdkVersion 22
        targetSdkVersion 33
        versionCode 5
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        Properties properties = new Properties()
        properties.load(project.rootProject.file("local.properties").newDataInputStream())
        buildConfigField("String", "API_KEY", "\"${properties.getProperty("API_KEY")}\"")
        buildConfigField("String", "SECRET", "\"${properties.getProperty("SECRET")}\"")
        buildConfigField("String", "SUPABASE_URL", "\"${properties.getProperty("SUPABASE_URL")}\"")
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

    }
    flavorDimensions "environment"
    productFlavors {
        dev {
            dimension "environment"
            applicationIdSuffix ".dev"
            versionNameSuffix "-dev"
            Properties properties = new Properties()
            properties.load(project.rootProject.file("local.properties").newDataInputStream())
            buildConfigField("String", "API_KEY", "\"${properties.getProperty("API_KEY_DEBUG")}\"")
            buildConfigField("String", "SECRET", "\"${properties.getProperty("SECRET_DEBUG")}\"")
            buildConfigField("String", "SUPABASE_URL", "\"${properties.getProperty("SUPABASE_URL_DEBUG")}\"")
        }
        prod {
            dimension "environment"
            applicationIdSuffix ".prod"
            versionNameSuffix "-prod"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17.toString()
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion "1.5.2"
    }
    namespace 'com.hieuwu.groceriesstore'
}

dependencies {
    implementation project(':models')

    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation libs.bundles.androidx
    implementation libs.bundles.android.ui

    implementation libs.kotlin.stdlib

    implementation libs.legacy.support.v4

    implementation libs.timber

    implementation libs.bundles.room
    kapt libs.room.compiler

    implementation libs.hilt
    kapt libs.hilt.compiler

    implementation libs.glide
    annotationProcessor libs.glide.compiler
    implementation libs.lottie
    implementation libs.lottie.compose

    implementation libs.bundles.retrofit
    implementation libs.gson
    implementation libs.moshi
    implementation libs.kotlin.coroutines.play.services
    implementation(libs.kotlinx.immutable)
    implementation(libs.glide.compose)

    implementation platform(libs.firebase.bom)
    implementation libs.bundles.firebase
    implementation(libs.ktor.client.cio)
//    implementation(libs.postgrest.kt.android)
    implementation libs.ktor.client.android
    implementation libs.ktor.utils.jvm
    implementation libs.ktor.client.logging.jvm
    implementation(libs.ktor.client.core)

    implementation(platform("io.github.jan-tennert.supabase:bom:2.4.0"))
    implementation("io.github.jan-tennert.supabase:postgrest-kt")
    implementation("io.github.jan-tennert.supabase:gotrue-kt")
    implementation("io.github.jan-tennert.supabase:storage-kt")

    def composeBom = platform('androidx.compose:compose-bom:2023.09.02')
    implementation(composeBom)
    androidTestImplementation(composeBom)

    implementation("androidx.compose.runtime:runtime")
    implementation("androidx.compose.ui:ui")
    implementation("androidx.compose.foundation:foundation")
    implementation("androidx.compose.foundation:foundation-layout")
    implementation("androidx.compose.material:material")
    implementation("androidx.compose.runtime:runtime-livedata")
    implementation("androidx.compose.ui:ui-tooling")
    implementation libs.accompanist.themeadapter.material
    implementation(libs.androidx.hilt.navigation.compose)
    implementation libs.glide.compose
    implementation libs.androidx.material3
    testImplementation libs.mockito.core

    debugImplementation libs.androidx.ui.tooling
    implementation libs.androidx.ui.tooling.preview
    def nav_version = "2.5.3"
    implementation(libs.androidx.navigation.compose)
    implementation libs.androidx.material.icons.extended

    implementation libs.caruilib
    testImplementation libs.mockito.kotlin

    testImplementation libs.junit
    androidTestImplementation libs.androidx.test.runner
    androidTestImplementation libs.androidx.test.arch.core
}

task wrapper(type: Wrapper) {
    gradleVersion = '7.5'
}

detekt {
    config = files("${project.rootDir.absolutePath}/config/detekt/detekt.yml")
    buildUponDefaultConfig = true
}

ktlint {
//    android.set(true)
//    reporters {
//        reporter(ReporterType.PLAIN)
//        reporter(ReporterType.HTML)
//    }
}
